{"version":3,"file":"component---src-pages-projects-js-7fe2a35a86dbe7b218a0.js","mappings":"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","sources":["webpack://@ntyukaev/gatsby-multilingual-parallax-theme/./src/components/bio.jsx","webpack://@ntyukaev/gatsby-multilingual-parallax-theme/./src/components/layout.jsx","webpack://@ntyukaev/gatsby-multilingual-parallax-theme/./src/components/project-card.jsx","webpack://@ntyukaev/gatsby-multilingual-parallax-theme/./src/pages/projects.js"],"sourcesContent":["import * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Trans } from 'gatsby-plugin-react-i18next'\nimport { StaticImage } from 'gatsby-plugin-image'\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n          siteDescription\n          social\n        }\n      }\n    }\n  `)\n\n  const author = data.site.siteMetadata?.author\n  const siteDescription = data.site.siteMetadata?.siteDescription\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'end'\n      }}\n    >\n      {author && (\n        <div style={{ textAlign: 'right' }}>\n          <div>\n            <Trans>Written by</Trans> <strong>{author}</strong>\n          </div>\n          <div>{siteDescription || null}</div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport PropTypes from 'prop-types'\nimport { Trans, Link } from 'gatsby-plugin-react-i18next'\nimport { format } from 'date-fns'\nimport LanguageSelector from './language-selector'\nimport Bio from './bio'\nimport ThemeSelector from './theme-selector'\n\nconst Layout = ({ title, children, languages, updated }) => {\n  return (\n    <div\n      sx={{\n        maxWidth: ['11/12', '10/12', '9/12', '3/4', '1/2'],\n        margin: '0 auto',\n        py: 40\n      }}\n    >\n      <header>\n        <nav\n          sx={{\n            display: 'flex',\n            gridGap: '15px',\n            alignItems: 'end',\n            flexDirection: ['column', 'column', 'column', 'row'],\n            justifyContent: 'space-between'\n          }}\n        >\n          <div\n            sx={{\n              display: 'grid',\n              textAlign: 'right',\n              gridGap: '15px',\n              gridTemplateColumns: [\n                'auto',\n                'auto',\n                'auto',\n                'auto auto auto auto'\n              ]\n            }}\n          >\n            <Link to=\"/\">\n              <Trans>Home</Trans>\n            </Link>\n            <Link to=\"/about\">\n              <Trans>About</Trans>\n            </Link>\n            <Link to=\"/projects\">\n              <Trans>Projects</Trans>\n            </Link>\n            <Link to=\"/contact\">\n              <Trans>Contact</Trans>\n            </Link>\n          </div>\n          <div sx={{ display: 'flex', alignItems: 'center' }}>\n            <ThemeSelector />\n            <LanguageSelector languages={languages} />\n          </div>\n        </nav>\n        <h1>{title}</h1>\n        {updated && (\n          <div sx={{ textAlign: 'right' }}>\n            <b>\n              <Trans>updated at</Trans>:{' '}\n              {format(new Date(updated), 'dd/MM/yyyy')}\n            </b>\n          </div>\n        )}\n        <hr />\n      </header>\n      <main\n        sx={{\n          pt: 15,\n          pb: 15,\n          ul: { paddingInlineStart: '20px' },\n          ol: { paddingInlineStart: '20px' }\n        }}\n      >\n        {children}\n      </main>\n      <hr />\n      <footer>\n        <Bio />\n      </footer>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  languages: PropTypes.array,\n  updated: PropTypes.string\n}\n\nexport default Layout\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport PropTypes from 'prop-types'\nimport { format } from 'date-fns'\nimport { Link, Trans } from 'gatsby-plugin-react-i18next'\n\nconst ProjectCard = ({ link, title, children, preview, updated }) => (\n  <Link\n    to={link}\n    sx={{\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      width: '100%',\n      color: 'primary',\n      boxShadow: 'lg',\n      position: 'relative',\n      textDecoration: 'none',\n      borderRadius: 'lg',\n      background: 'divider',\n      transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) !important',\n      '&:hover': {\n        transform: 'translateY(-5px)',\n        boxShadow: 'xl'\n      }\n    }}\n  >\n    <img\n      sx={{\n        display: 'block',\n        width: '100%',\n        height: '10rem',\n        objectFit: 'cover'\n      }}\n      src={preview}\n      alt={preview}\n    />\n    <div\n      sx={{\n        padding: 3,\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n      }}\n    >\n      <h3\n        sx={{\n          textTransform: 'uppercase',\n          letterSpacing: 'wide',\n          fontWeight: 900\n        }}\n      >\n        {title}\n      </h3>\n      <p\n        sx={{\n          p: {\n            color: 'white',\n            margin: 0\n          }\n        }}\n      >\n        {children}\n      </p>\n      <div sx={{ textAlign: 'right' }}>\n        <Trans>updated at</Trans>: {format(new Date(updated), 'dd/MM/yyyy')}\n      </div>\n    </div>\n  </Link>\n)\n\nProjectCard.propTypes = {\n  link: PropTypes.string,\n  title: PropTypes.string,\n  children: PropTypes.node,\n  preview: PropTypes.string,\n  updated: PropTypes.string\n}\n\nexport default ProjectCard\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Seo from '../components/seo'\nimport { useTranslation } from 'gatsby-plugin-react-i18next'\nimport Layout from '../components/layout'\nimport ProjectCard from '../components/project-card'\n\nconst Projects = ({ data }) => {\n  const { t } = useTranslation()\n  return (\n    <Layout title={t('Projects')}>\n      <section\n        sx={{\n          display: 'grid',\n          gridGap: [4, 4, 4, 5],\n          gridTemplateColumns: ['1fr', '1fr', 'repeat(2, 1fr)']\n        }}\n      >\n        {data?.projects?.nodes?.map(\n          ({\n            fields: { path, updated },\n            frontmatter: { title, description, previewImageUrl }\n          }) => (\n            <ProjectCard\n              key={path}\n              updated={updated}\n              preview={previewImageUrl}\n              link={path}\n              title={title}\n            >\n              {description}\n            </ProjectCard>\n          )\n        )}\n      </section>\n    </Layout>\n  )\n}\n\nProjects.propTypes = {\n  data: PropTypes.object\n}\n\nexport const query = graphql`\n  query ($language: String!) {\n    projects: allMarkdownRemark(\n      filter: {\n        fields: {\n          language: { eq: $language }\n          sourceInstanceName: { eq: \"posts\" }\n        }\n      }\n    ) {\n      nodes {\n        fields {\n          updated\n          language\n          path\n        }\n        frontmatter {\n          title\n          description\n          previewImageUrl\n        }\n      }\n    }\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\n\nexport const Head = () => <Seo />\n\nexport default Projects\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","siteDescription","React","style","display","alignItems","justifyContent","textAlign","Trans","_ref","title","children","languages","updated","jsx","sx","maxWidth","margin","py","gridGap","flexDirection","gridTemplateColumns","Link","to","ThemeSelector","LanguageSelector","format","Date","pt","pb","ul","paddingInlineStart","ol","link","preview","width","color","boxShadow","position","textDecoration","borderRadius","background","transition","transform","height","objectFit","src","alt","padding","flexGrow","textTransform","letterSpacing","fontWeight","p","Head","Seo","_data$projects","_data$projects$nodes","t","useTranslation","Layout","projects","nodes","map","_ref2","fields","path","frontmatter","description","previewImageUrl","ProjectCard","key"],"sourceRoot":""}