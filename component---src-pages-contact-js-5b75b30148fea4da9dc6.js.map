{"version":3,"file":"component---src-pages-contact-js-5b75b30148fea4da9dc6.js","mappings":"iRAyCA,MApCYA,KAAO,IAADC,EAAAC,EAChB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAYtBC,EAA+B,QAAzBJ,EAAGE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBI,OACjCG,EAAwC,QAAzBN,EAAGC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBM,gBAEhD,OACEC,EAAAA,cAAA,OACEC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,QAGjBR,GACCI,EAAAA,cAAA,OAAKC,MAAO,CAAEI,UAAW,UACvBL,EAAAA,cAAA,WACEA,EAAAA,cAACM,EAAAA,MAAK,KAAC,cAAkB,IAACN,EAAAA,cAAA,cAASJ,IAErCI,EAAAA,cAAA,WAAMD,GAAmB,OAGzB,E,UC0DV,MAtFeQ,IAA8C,IAA7C,MAAEC,EAAK,SAAEC,EAAQ,UAAEC,EAAS,QAAEC,GAASJ,EACrD,OACEK,EAAAA,EAAAA,IAAA,OACEC,GAAI,CACFC,SAAU,CAAC,QAAS,QAAS,OAAQ,MAAO,OAC5CC,OAAQ,SACRC,GAAI,MAGNJ,EAAAA,EAAAA,IAAA,eACEA,EAAAA,EAAAA,IAAA,OACEC,GAAI,CACFX,QAAS,OACTe,QAAS,OACTd,WAAY,MACZe,cAAe,CAAC,SAAU,SAAU,SAAU,OAC9Cd,eAAgB,mBAGlBQ,EAAAA,EAAAA,IAAA,OACEC,GAAI,CACFX,QAAS,OACTG,UAAW,QACXY,QAAS,OACTE,oBAAqB,CACnB,OACA,OACA,OACA,0BAIJP,EAAAA,EAAAA,IAACQ,EAAAA,KAAI,CAACC,GAAG,MACPT,EAAAA,EAAAA,IAACN,EAAAA,MAAK,KAAC,UAETM,EAAAA,EAAAA,IAACQ,EAAAA,KAAI,CAACC,GAAG,WACPT,EAAAA,EAAAA,IAACN,EAAAA,MAAK,KAAC,WAETM,EAAAA,EAAAA,IAACQ,EAAAA,KAAI,CAACC,GAAG,cACPT,EAAAA,EAAAA,IAACN,EAAAA,MAAK,KAAC,cAETM,EAAAA,EAAAA,IAACQ,EAAAA,KAAI,CAACC,GAAG,aACPT,EAAAA,EAAAA,IAACN,EAAAA,MAAK,KAAC,cAGXM,EAAAA,EAAAA,IAAA,OAAKC,GAAI,CAAEX,QAAS,OAAQC,WAAY,YACtCS,EAAAA,EAAAA,IAACU,EAAAA,EAAa,OACdV,EAAAA,EAAAA,IAACW,EAAAA,EAAgB,CAACb,UAAWA,OAGjCE,EAAAA,EAAAA,IAAA,UAAKJ,GACJG,IACCC,EAAAA,EAAAA,IAAA,OAAKC,GAAI,CAAER,UAAW,WACpBO,EAAAA,EAAAA,IAAA,UACEA,EAAAA,EAAAA,IAACN,EAAAA,MAAK,KAAC,cAAkB,IAAE,KAC1BkB,EAAAA,EAAAA,GAAO,IAAIC,KAAKd,GAAU,iBAIjCC,EAAAA,EAAAA,IAAA,aAEFA,EAAAA,EAAAA,IAAA,QACEC,GAAI,CACFa,GAAI,GACJC,GAAI,GACJC,GAAI,CAAEC,mBAAoB,QAC1BC,GAAI,CAAED,mBAAoB,UAG3BpB,IAEHG,EAAAA,EAAAA,IAAA,YACAA,EAAAA,EAAAA,IAAA,eACEA,EAAAA,EAAAA,IAACrB,EAAG,OAEF,C,mGC9EV,MA0CawC,EAAOA,IAAM/B,EAAAA,cAACgC,EAAAA,EAAG,MAE9B,UA5CgBzB,IAAe,IAAd,KAAEb,GAAMa,EACvB,OACEP,EAAAA,cAACiC,EAAAA,EAAM,CAACzB,MAAOd,EAAKwC,QAAQC,oBAAoBC,YAAY5B,OAC1DR,EAAAA,cAAA,WACEqC,wBAAyB,CACvBC,OAAQ5C,EAAKwC,QAAQC,oBAAoBI,QAGtC,C","sources":["webpack://@ntyukaev/gatsby-multilingual-parallax-theme/./src/components/bio.jsx","webpack://@ntyukaev/gatsby-multilingual-parallax-theme/./src/components/layout.jsx","webpack://@ntyukaev/gatsby-multilingual-parallax-theme/./src/pages/contact.js"],"sourcesContent":["import * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Trans } from 'gatsby-plugin-react-i18next'\nimport { StaticImage } from 'gatsby-plugin-image'\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n          siteDescription\n          social\n        }\n      }\n    }\n  `)\n\n  const author = data.site.siteMetadata?.author\n  const siteDescription = data.site.siteMetadata?.siteDescription\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'end'\n      }}\n    >\n      {author && (\n        <div style={{ textAlign: 'right' }}>\n          <div>\n            <Trans>Written by</Trans> <strong>{author}</strong>\n          </div>\n          <div>{siteDescription || null}</div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport PropTypes from 'prop-types'\nimport { Trans, Link } from 'gatsby-plugin-react-i18next'\nimport { format } from 'date-fns'\nimport LanguageSelector from './language-selector'\nimport Bio from './bio'\nimport ThemeSelector from './theme-selector'\n\nconst Layout = ({ title, children, languages, updated }) => {\n  return (\n    <div\n      sx={{\n        maxWidth: ['11/12', '10/12', '9/12', '3/4', '1/2'],\n        margin: '0 auto',\n        py: 40\n      }}\n    >\n      <header>\n        <nav\n          sx={{\n            display: 'flex',\n            gridGap: '15px',\n            alignItems: 'end',\n            flexDirection: ['column', 'column', 'column', 'row'],\n            justifyContent: 'space-between'\n          }}\n        >\n          <div\n            sx={{\n              display: 'grid',\n              textAlign: 'right',\n              gridGap: '15px',\n              gridTemplateColumns: [\n                'auto',\n                'auto',\n                'auto',\n                'auto auto auto auto'\n              ]\n            }}\n          >\n            <Link to=\"/\">\n              <Trans>Home</Trans>\n            </Link>\n            <Link to=\"/about\">\n              <Trans>About</Trans>\n            </Link>\n            <Link to=\"/projects\">\n              <Trans>Projects</Trans>\n            </Link>\n            <Link to=\"/contact\">\n              <Trans>Contact</Trans>\n            </Link>\n          </div>\n          <div sx={{ display: 'flex', alignItems: 'center' }}>\n            <ThemeSelector />\n            <LanguageSelector languages={languages} />\n          </div>\n        </nav>\n        <h1>{title}</h1>\n        {updated && (\n          <div sx={{ textAlign: 'right' }}>\n            <b>\n              <Trans>updated at</Trans>:{' '}\n              {format(new Date(updated), 'dd/MM/yyyy')}\n            </b>\n          </div>\n        )}\n        <hr />\n      </header>\n      <main\n        sx={{\n          pt: 15,\n          pb: 15,\n          ul: { paddingInlineStart: '20px' },\n          ol: { paddingInlineStart: '20px' }\n        }}\n      >\n        {children}\n      </main>\n      <hr />\n      <footer>\n        <Bio />\n      </footer>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  languages: PropTypes.array,\n  updated: PropTypes.string\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Seo from '../components/seo'\nimport Layout from '../components/layout'\n\nconst Contact = ({ data }) => {\n  return (\n    <Layout title={data.content.childMarkdownRemark.frontmatter.title}>\n      <article\n        dangerouslySetInnerHTML={{\n          __html: data.content.childMarkdownRemark.html\n        }}\n      ></article>\n    </Layout>\n  )\n}\n\nContact.propTypes = {\n  data: PropTypes.object\n}\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n    content: file(\n      relativeDirectory: { eq: $language }\n      sourceInstanceName: { eq: \"content\" }\n      name: { eq: \"contact\" }\n    ) {\n      childMarkdownRemark {\n        html\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n`\n\nexport const Head = () => <Seo />\n\nexport default Contact\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","siteDescription","React","style","display","alignItems","justifyContent","textAlign","Trans","_ref","title","children","languages","updated","jsx","sx","maxWidth","margin","py","gridGap","flexDirection","gridTemplateColumns","Link","to","ThemeSelector","LanguageSelector","format","Date","pt","pb","ul","paddingInlineStart","ol","Head","Seo","Layout","content","childMarkdownRemark","frontmatter","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}